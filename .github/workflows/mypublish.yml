name: MyRelease

on:
  workflow_dispatch:
    inputs:
      kachina-channel:
        type: choice
        description: 'Kachina Installer Channel'
        required: true
        default: 'release'
        options:
          - release
          - dev

jobs:
  # build_web_map_editor:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #       with:
  #         repository: huiyadanli/bettergi-map
  #     - uses: actions/setup-node@v4
  #       with:
  #         node-version: 20
  #         cache: 'npm'
  #     - run: npm install
  #     - run: npm run build:single
  #     - uses: actions/upload-artifact@v4
  #       with:
  #         name: web_map_editor
  #         path: dist/

  # build_web_scripts_list:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #       with:
  #         repository: huiyadanli/bettergi-scripts-web
  #     - uses: actions/setup-node@v4
  #       with:
  #         node-version: 20
  #         cache: 'npm'
  #     - run: npm install
  #     - run: npm run build:single
  #     - uses: actions/upload-artifact@v4
  #       with:
  #         name: web_scripts_list
  #         path: dist/
  
  build_dist:
    runs-on: self-hosted
    # needs: [build_web_map_editor, build_web_scripts_list]
    # outputs:
    #   version: ${{ steps.extract_version.outputs.version }}
    env:
      DOTNET_INSTALL_DIR: "D:\\dotnet"
    steps:
      - uses: actions/checkout@v4
        with:
          repository: zhangfeiran/better-genshin-impact
      - uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.x
      - name: Cache NuGet packages
        uses: actions/cache@v4
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/BetterGenshinImpact.csproj') }}
          restore-keys: |
            ${{ runner.os }}-nuget-
      - name: 📝 Extract version number
        id: extract_version
        shell: pwsh
        run: |
          $xmlContent = Get-Content BetterGenshinImpact/BetterGenshinImpact.csproj
          $version = ($xmlContent | Select-String -Pattern 'AssemblyVersion\>(.*)\<\/AssemblyVersion').Matches.Groups[1].Value
          echo "version=$version" >> $env:GITHUB_OUTPUT
          echo "::notice::Version number is: $version"
      - name: 🛠️ Build application
        run: dotnet publish BetterGenshinImpact/BetterGenshinImpact.csproj -c Release -p:PublishProfile=FolderProfile
        continue-on-error: true
      - name: 🧹 Clear & Move Files
        run: |
            $sourceDir = ".\BetterGenshinImpact\bin\x64\Release\net8.0-windows10.0.22621.0\publish\win-x64"
            Get-ChildItem -Path $sourceDir -Recurse -Filter "*.lib" | Remove-Item -Force
            Get-ChildItem -Path $sourceDir -Recurse -Filter "*ffmpeg*.dll" | Remove-Item -Force
            Get-ChildItem -Path $sourceDir -Recurse -Filter "*.pdb" | Remove-Item -Force
            New-Item -Path "dist/BetterGI" -ItemType Directory
            xcopy "$sourceDir\*" ".\dist\BetterGI\" /E /H /I /Y
      # 下载前面构建好的web内容
      # - uses: actions/download-artifact@v4
      #   with:
      #     name: web_map_editor
      #     path: dist/BetterGI/Assets/Map/Editor
      # - uses: actions/download-artifact@v4
      #   with:
      #     name: web_scripts_list
      #     path: dist/BetterGI/Assets/Web/ScriptRepo
      # 下载构建 repo 的内容补充数据
      # - uses: actions/checkout@v4
      #   with:
      #     repository: zhangfeiran/bettergi-publish
      #     path: publish
      # - name: 🗜️ Extract Map
      #   run: |
      #     cd publish
      #     Get-ChildItem -Filter *.zst | ForEach-Object {
      #         if ($_.PSIsContainer -eq $false) {
      #             $file = $_.Name
      #             $output_file = "..\dist\BetterGI\Assets\Map\$($file -replace '.zst$', '')"
      #             & zstd -d $file -o $output_file
      #             Write-Host "$file -> $output_file"
      #         }
      #     }
      # 生成更新器
      # - name: 📥 Download kachina-builder release
      #   if: ${{ github.event.inputs.kachina-channel == 'release' }}
      #   uses: robinraju/release-downloader@v1.8
      #   with:
      #     repository: "YuehaiTeam/kachina-installer"
      #     latest: true
      #     fileName: "kachina-builder.exe"
          
      # - name: 📥 Download kachina-builder dev
      #   if: ${{ github.event.inputs.kachina-channel == 'dev' }}
      #   uses: dawidd6/action-download-artifact@v8
      #   with:
      #     github_token: ${{secrets.GITHUB_TOKEN}}
      #     repo: "YuehaiTeam/kachina-installer"
      #     workflow: "build.yml"
      #     name: artifact
      #     branch: main
      #     event: push
      #     workflow_conclusion: success
      # - name: 📦 Gen Updater by kachina-builder
      #   run: |
      #     cd dist
      #     ..\kachina-builder.exe pack -c ..\publish\kachina.config.json -o BetterGI/BetterGI.update.exe
      # 打包上传
      # - name: 📦 Generate archive
      #   run: |
      #     cd dist
      #     7z a "BetterGI_v${{  steps.extract_version.outputs.version }}.7z" BetterGI -t7z -mx=5 -mf=BCJ2 -r -y
      # - uses: actions/upload-artifact@v4
      #   with:
      #     name: BetterGI_7z
      #     path: dist/BetterGI_*.7z

